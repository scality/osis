apply plugin: "jacoco"
jacoco {
    toolVersion = "0.8.5"
}

test {
    jacoco {
        excludes = []
    }
        finalizedBy jacocoTestCoverageVerification // code coverage is verified after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${rootDir}/reports/code-coverage")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    /*excluding original osis stub code*/
                    "**/com/vmware/osis/resource/*.*",
                    "**/com/vmware/osis/model/**/*.*",
                    "**/com/vmware/osis/annotation/*.*",
                    "**/com/vmware/osis/security/**/*.*",
                    "**/com/vmware/osis/service/*.*",
                    "**/com/vmware/osis/validation/*.*",
                    "**/com/vmware/osis/platform/**/*.*",
                    "**/com/vmware/osis/platform/*.*",

                    /*Ignore config classes*/
                    "**/com/scality/osis/configuration/*.*",
                    "**/com/scality/osis/*.*",
                    "**/com/scality/osis/security/basic/*.*",
                    "**/com/scality/osis/security/crypto/model/*.*",
                    "**/com/scality/osis/security/crypto/CryptoEnv*.*",
                    "**/com/scality/osis/security/utils/YamlPropertySourceFactory.*",
                    "**/com/scality/osis/security/utils/SecurityConstants.*",

                    /*Ignore external library*/
                    "**/com/scality/osis/security/crypto/Hkdf*.*"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    /*excluding original osis stub code*/
                    "**/com/vmware/osis/resource/*.*",
                    "**/com/vmware/osis/model/**/*.*",
                    "**/com/vmware/osis/annotation/*.*",
                    "**/com/vmware/osis/security/**/*.*",
                    "**/com/vmware/osis/service/*.*",
                    "**/com/vmware/osis/validation/*.*",
                    "**/com/vmware/osis/platform/**/*.*",
                    "**/com/vmware/osis/platform/*.*",

                    /*Ignore config classes*/
                    "**/com/scality/osis/configuration/*.*",
                    "**/com/scality/osis/*.*",
                    "**/com/scality/osis/security/**/*.*",
                    "**/com/scality/osis/security/crypto/**/*.*",

                    /*Ignore external library*/
                    "**/com/scality/osis/security/crypto/Hkdf.*"
            ])
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.8 // verifying mandatory code coverage of 80%
            }
        }
        rule {
            element = 'METHOD'
            excludes = [
            ]
        }
    }
}
check.dependsOn('jacocoTestReport')
